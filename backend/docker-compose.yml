version: '3.8'

services:
  # API网关
  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/zyjc_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs

  # 用户服务
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/zyjc_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis

  # 数学批改服务
  math-service:
    build:
      context: .
      dockerfile: services/subject-services/math-service/Dockerfile
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/zyjc_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    volumes:
      - ./ml-models:/app/ml-models

  # 语文批改服务
  chinese-service:
    build:
      context: .
      dockerfile: services/subject-services/chinese-service/Dockerfile
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/zyjc_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis

  # 英语批改服务
  english-service:
    build:
      context: .
      dockerfile: services/subject-services/english-service/Dockerfile
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/zyjc_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis

  # OCR识别服务
  ocr-service:
    build:
      context: .
      dockerfile: services/ocr-service/Dockerfile
    ports:
      - "8005:8000"
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis

  # 学情分析服务
  analysis-service:
    build:
      context: .
      dockerfile: services/analysis-service/Dockerfile
    ports:
      - "8006:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/zyjc_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis

  # 错题生成服务
  generator-service:
    build:
      context: .
      dockerfile: services/generator-service/Dockerfile
    ports:
      - "8007:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/zyjc_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis

  # 支付服务
  payment-service:
    build:
      context: .
      dockerfile: services/payment-service/Dockerfile
    ports:
      - "8008:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/zyjc_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis

  # 通知服务
  notification-service:
    build:
      context: .
      dockerfile: services/notification-service/Dockerfile
    ports:
      - "8009:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/zyjc_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis

  # PostgreSQL数据库
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: zyjc_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  # Redis缓存
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  # MongoDB文档数据库（题库）
  mongodb:
    image: mongo:7
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - gateway

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  rabbitmq_data: